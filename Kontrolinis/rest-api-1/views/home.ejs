<%- include('partials/header'); -%>

<h1 class="title">Programuotojai API</h1>
<div id="homepage">
  <h2>Surask programuotoją šalia savęs!</h2>
  <div id="devs"></div>
</div>

<script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
<script src="https://unpkg.com/react@15/dist/react.js"></script>
<script src="https://unpkg.com/react-dom@15/dist/react-dom.min.js"></script>

<script>
  async function deleteDev(dev) {
    if (!confirm("Ar tikrai ištrinti " + dev.vardas + "?")) return;

    try {
      const res = await fetch(`/api/programuotojai/${dev._id}`, {
        method: "DELETE",
      });
      if (res.ok) {
        window.location.href = "/";
      } else {
        alert("Nepavyko ištrinti (klaida " + res.status + ")");
      }
    } catch (err) {
      console.error(err);
      alert("Serverio klaida");
    }
  }
</script>

<!-- Create React Component -->
<script type="text/babel">
  var Devs = React.createClass({
    getInitialState: function () {
      return {
        devs: [],
      };
    },
    render: function () {
      var devs = this.state.devs;
      devs = devs.map(function (dev, index) {
        return (
          <li key={index}>
            <span className={dev.laisvas ? "free" : "busy"}></span>
            <span className="name">{dev.vardas}</span>
            <span className="rank">{dev.tech.join(", ")}</span>
            <span className="dist">{Math.floor(dev.distance / 1000)} km</span>
            <span class="edit">
              <a href={`/api/edit/${dev._id}`}>Edit</a>
            </span>
            <span className="delete">
              <a href="#" onClick={() => deleteDev(dev)}>
                Delete
              </a>
            </span>
          </li>
        );
      });

      return (
        <div id="dev-container">
          <form class="formMain" id="search" onSubmit={this.handleSubmit}>
            <label>Ilguma:</label>
            <input type="number" ref="lng" placeholder="ilguma" required />
            <label>Platuma:</label>
            <input type="number" ref="lat" placeholder="platuma" required />
            <input type="submit" value="Rasti programuotojus" />
          </form>
          <ul>{devs}</ul>
        </div>
      );
    },

    handleSubmit: function (e) {
      e.preventDefault();
      var lng = this.refs.lng.value;
      var lat = this.refs.lat.value;
      console.log(lat);
      console.log(lng);
      fetch("/api/programuotojai/?lng=" + lng + "&lat=" + lat)
        .then((response) => {
          if (!response.ok) {
            throw new Error("Network response was not ok");
          }
          return response.json();
        })
        .then((json) => {
          this.setState({
            devs: json,
          });
          console.log(json);
        })
        .catch((error) => {
          console.error("Error during fetch:", error);
        });
    },
  });
  ReactDOM.render(<Devs />, document.getElementById("devs"));
</script>

<%- include('partials/forma'); -%> <%- include('partials/footer'); -%>
